{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible04.png","path":"images/flexible/flexible04.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible03.png","path":"images/flexible/flexible03.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible06.png","path":"images/flexible/flexible06.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible07.png","path":"images/flexible/flexible07.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible08.png","path":"images/flexible/flexible08.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/flexible/flexible01.png","path":"images/flexible/flexible01.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible02.png","path":"images/flexible/flexible02.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible05.png","path":"images/flexible/flexible05.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible09.png","path":"images/flexible/flexible09.png","modified":1,"renderable":0},{"_id":"source/images/flexible/flexible10.png","path":"images/flexible/flexible10.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"2fee1653bd2540632d79b43158dc970577d7fdda","modified":1458651271099},{"_id":"source/favicon.ico","hash":"421c09dd34bd64ec866f4d34b808c887b23b1afe","modified":1458651271103},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1458651271104},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1458651271105},{"_id":"themes/next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1458651271110},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1458651271110},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1458651271110},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1458651271110},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1458651271111},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1458651271111},{"_id":"themes/next/_config.yml","hash":"eb890e709a4fe2112207d60c64d3c04083996717","modified":1458651271112},{"_id":"themes/next/bower.json","hash":"93adc30dab22314f3757c3b6d3c13771de994b08","modified":1458651271112},{"_id":"themes/next/gulpfile.coffee","hash":"0494704f9e1ac8f63b9bd2791c443ffbf6091df3","modified":1458651271112},{"_id":"themes/next/package.json","hash":"afc2cbda2fe4643808c151135d5528267ee634c4","modified":1458651271146},{"_id":"source/_posts/animation-详解.md","hash":"29a68ef0ae24e2f5913ab5fff68ef5f00f2c8a57","modified":1459769036854},{"_id":"source/_posts/webapck配置指导.md","hash":"791374a4f327b4e6357d4b4212e8fe1946131b95","modified":1458651271100},{"_id":"source/_posts/zepto学习笔记.md","hash":"5736a703ed0069c189cd984838294886f328a997","modified":1458651271100},{"_id":"source/_posts/使用Flexible实现H5页面终端适配.md","hash":"c417be85a0481b1ebc39d06ca3df29e95e4a63a3","modified":1458822690964},{"_id":"source/_posts/模块系统.md","hash":"d6f08161af9f976759bdfac7fb448608a270ad9f","modified":1458651271102},{"_id":"source/about/index.md","hash":"b52b14fb83bc7f5e080f0ab61b0e28e39df937b6","modified":1458651271103},{"_id":"source/images/avatar.jpg","hash":"cec12ec035c5a08107cf379ea621d240b71377a0","modified":1458651271104},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1458651271105},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a09da7ff6504131e928b9c99dcec98a411331812","modified":1458651271105},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1458651271113},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1458651271113},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1458651271113},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1458651271114},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1458651271114},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1458651271115},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1458651271115},{"_id":"themes/next/languages/zh-Hans.yml","hash":"1693a2027de3736a8e4b08109e664d64771410c3","modified":1458651271116},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1458651271116},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1458651271116},{"_id":"themes/next/layout/_layout.swig","hash":"bd7d977379b8efc5873f637f1c4d53879626f4d6","modified":1458651271117},{"_id":"themes/next/layout/about.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1458651271144},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1458651271145},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1458651271145},{"_id":"themes/next/layout/index.swig","hash":"da76d90fbda3597623ea6d01d5e758b8bd6f180f","modified":1458651271145},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1458651271146},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1458651271146},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1458651271147},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1458651271237},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1458651271237},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1458651271237},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271188},{"_id":"source/images/flexible/flexible04.png","hash":"dbd8d6ab64540975fc2dce44368a5986d787e6b9","modified":1458822690978},{"_id":"source/images/flexible/flexible03.png","hash":"f3c194f0ea9047ba2b12f777d2f66c19813cb55e","modified":1458822690976},{"_id":"source/images/flexible/flexible06.png","hash":"5d054f69961f17a7b971998d7579c7b196bf042c","modified":1458822691000},{"_id":"source/images/flexible/flexible07.png","hash":"c8f5535f6c970f2951cff1339920991153aeaed2","modified":1458822691001},{"_id":"source/images/flexible/flexible08.png","hash":"4c841e678059a3eaac0b8c4ac4d70cce106e95c3","modified":1458822691002},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1458651271117},{"_id":"themes/next/layout/_macro/post.swig","hash":"a61cf39c2d79f790fbb4a8e07ac2bbb06b95390d","modified":1458651271118},{"_id":"themes/next/layout/_macro/reward.swig","hash":"89f3d2e978d4062b470e774eda21c2ed3a086ab9","modified":1458651271118},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6de4ea6db39fe8e04b058bcefc5b23f954726e77","modified":1458651271128},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1458651271129},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1458651271129},{"_id":"themes/next/layout/_partials/footer.swig","hash":"cba20577cea89196d714ddfe6b3ea00f7c906ba7","modified":1458651271130},{"_id":"themes/next/layout/_partials/head.swig","hash":"9d6501b54b959d28a6e0b5fde87d25fc38b97660","modified":1458651271130},{"_id":"themes/next/layout/_partials/header.swig","hash":"b3f4f07f03bedd615039934b44d552b91e2a4a1d","modified":1458651271131},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1458651271131},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1458651271131},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1458651271135},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1458651271135},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"1a51b8caa5130ff55948ae59dddb87ee0550c1e9","modified":1458651271144},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1458651271147},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1458651271148},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1458651271148},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1458651271188},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1458651271189},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1458651271189},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1458651271190},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1458651271190},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1458651271192},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1458651271193},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1458651271193},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458651271194},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458651271194},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1458651271194},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1458651271195},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1458651271195},{"_id":"source/images/flexible/flexible01.png","hash":"dc9be1fd1a3eb85adc0cdb803ae4d51e00ca2180","modified":1458822690969},{"_id":"source/images/flexible/flexible02.png","hash":"858c0905d08a2454cc3fdbc32726d3c856717fab","modified":1458822690973},{"_id":"source/images/flexible/flexible05.png","hash":"9a9389cbb474f1216a6c2c80d4e9cd131d148598","modified":1458822690999},{"_id":"source/images/flexible/flexible09.png","hash":"689c9ef22b7ba120aabe2b40b38a586ac700e158","modified":1458822691005},{"_id":"source/images/flexible/flexible10.png","hash":"a943ddd6f14e34e3267f2f15f8027fcc4a3f78c8","modified":1458822691010},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271136},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271136},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271172},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271172},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271173},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271184},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458651271187},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1458651271132},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1458651271132},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1458651271132},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1458651271133},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1458651271133},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1458651271134},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1458651271134},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1458651271137},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"6fa4daa91adee5800cbb0954e571b75e9796f99b","modified":1458651271136},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1458651271138},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1458651271140},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1458651271142},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1458651271143},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"8eecd19c756df615afb3f5ec6a527cd7bd06d20c","modified":1458651271143},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1458651271143},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1458651271172},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1458651271173},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1458651271171},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1458651271184},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"9f87ded9cde425048e8ae063cbb481e78a0e469c","modified":1458651271186},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f171c71d42f8798608235206dd41b37193faed88","modified":1458651271187},{"_id":"themes/next/source/css/_variables/default.styl","hash":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1458651271187},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1458651271196},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1458651271196},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1458651271196},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1458651271197},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1458651271198},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1458651271208},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1458651271207},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1458651271208},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1458651271208},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1458651271225},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1458651271210},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1458651271210},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1458651271211},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1458651271212},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1458651271212},{"_id":"themes/next/source/js/src/utils.js","hash":"efcb2a7de9dc371d03a8598da2d71e2c53132d4c","modified":1458651271199},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1458651271228},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1458651271228},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1458651271228},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1458651271229},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1458651271229},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1458651271229},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1458651271231},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1458651271231},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1458651271235},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1458651271236},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1458651271236},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1458651271227},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1458651271138},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1458651271138},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1458651271139},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1458651271139},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1458651271140},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1458651271141},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"da8aa3beab56d8c306dd97cf41127a3859e2d00c","modified":1458651271142},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1458651271149},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1458651271150},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1458651271150},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1458651271151},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1458651271157},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1458651271165},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1458651271169},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"05be2af57229c5125297c945d2e60ca97070bae1","modified":1458651271170},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1458651271170},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1458651271171},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"d110befc142dbb881c4fdcb94df65ed2f603f1c1","modified":1458651271171},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1458651271169},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1458651271174},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1458651271174},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1458651271175},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1458651271176},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1458651271177},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1458651271177},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5187512cc4b2ce095230928c7046e0b26c3897bd","modified":1458651271177},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"59c0f66602ebc1c05c16f117bc8710d9f3744538","modified":1458651271180},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1458651271181},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"96f95471da25d0e80c6b82f1e834b03c9aba58a9","modified":1458651271181},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1458651271182},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1458651271183},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"802e599b1ac749eac162dae396f66b0acaa5edcc","modified":1458651271183},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1458651271178},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1458651271183},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1458651271179},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1458651271179},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1458651271179},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"f70fa81275eb4e0ea5e5a740b7a35539c6ffa9ba","modified":1458651271180},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8b37699252a24741716b40fb70972a77453cbfe1","modified":1458651271198},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1458651271199},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1458651271202},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1458651271200},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1458651271200},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1458651271202},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1458651271202},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1458651271205},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1458651271206},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1458651271207},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1458651271209},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1458651271210},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1458651271213},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1458651271214},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1458651271213},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1458651271225},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1458651271230},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1458651271231},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1458651271216},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1458651271217},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1458651271224},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1458651271234},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1458651271151},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"12724e07713c9e8d577d921c131f04de7a5e65b1","modified":1458651271154},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"9f0606d4d94ffa6bd77f91628507bba19133cf36","modified":1458651271154},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1458651271152},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1458651271152},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1458651271152},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"f168f79ba8cc80c775907da4cc00d01771ac1e1e","modified":1458651271153},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1458651271153},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"8539c1122966a6aea64267d48af05603caa5fa29","modified":1458651271155},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"6c34f2cf9ad9b9b787007cfca522deeb6b1ae3b7","modified":1458651271155},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1458651271156},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1458651271156},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"68ed6b0ad40745cb07ecd38f13960bb217aef848","modified":1458651271157},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1458651271157},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1458651271158},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1458651271158},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"5dba4ca272d7c767b57233cd99fba95dbf82153f","modified":1458651271159},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"c9e3c5aca361ed9bbfa41a9755f3c516025da67e","modified":1458651271159},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1458651271160},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1458651271160},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1458651271160},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1458651271161},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"0e91a5a80fb62ed38c97cb649b166f945c6ce5f1","modified":1458651271161},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1458651271161},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"70407054dbb5180c69e50ea2655d32835494394e","modified":1458651271162},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1458651271162},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1458651271163},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1458651271163},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"97832be1f30b631dbc2202524918b6eb55e74c4b","modified":1458651271163},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1458651271164},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"99c4b7d1459569cda394c733845d368008a180bf","modified":1458651271164},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"546ad04994f74643334fd36cdb548c17f71b11be","modified":1458651271164},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1458651271165},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1458651271166},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1458651271166},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1458651271167},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1458651271167},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1458651271167},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1458651271168},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1458651271168},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"0f368e6e95c0ba46580b491819e46ae31910c94b","modified":1458651271169},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1458651271178},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1458651271203},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1458651271203},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1458651271204},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1458651271205},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1458651271205},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1458651271204},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1458651271224},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1458651271221}],"Category":[{"name":"教程","_id":"cimovo3xn0004skgjda7zweo3"},{"name":"笔记","_id":"cimovo3y4000bskgj56l1quqd"}],"Data":[],"Page":[{"title":"about","date":"2016-03-22T08:02:16.000Z","_content":"## 我很帅，页面加载不出来了。。。","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-03-22 16:02:16\n---\n## 我很帅，页面加载不出来了。。。","updated":"2016-03-22T12:54:31.103Z","path":"about/index.html","comments":1,"layout":"page","_id":"cimovo3xf0001skgjyonaczhs","content":"<h2 id=\"我很帅，页面加载不出来了。。。\"><a href=\"#我很帅，页面加载不出来了。。。\" class=\"headerlink\" title=\"我很帅，页面加载不出来了。。。\"></a>我很帅，页面加载不出来了。。。</h2>","excerpt":"","more":"<h2 id=\"我很帅，页面加载不出来了。。。\"><a href=\"#我很帅，页面加载不出来了。。。\" class=\"headerlink\" title=\"我很帅，页面加载不出来了。。。\"></a>我很帅，页面加载不出来了。。。</h2>"}],"Post":[{"title":"animation-详解","date":"2016-04-04T08:22:51.000Z","_content":">A glamorous life is quite different to a life of luxury.\n\n## 简介 \nanimation属性是动画属性的简写，其中包括：\n- animation-name\n- animation-duration\n- animation-timing-function\n- animation-delay\n- animation-iteration-count\n- animation-direction\n- animation-fill-mode\n\n## 用法\nanimation可以定义多个动画属性，需要用逗号分隔。比如： \n```javascript\n/*一个animation定义的时候*/\nanimation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];\n/*多个animation定义的时候*/\nanimation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode],\n[animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];\n```\n其中简写的animation属性用空格分隔，而且他们之间的排序没什么影响，除了animation-duration和animation-delay，他们需要顺序。也就是说当你使用两个time参数的时候，第一个时间指的是animation-duration第二个时间指的是animation-delay。\n\n```javascript\nanimation: bounce 0.3s ease-in-out 1s infinite;\n/*equivalent to*/\nanimation-name: bounce;\nanimation-duration: 0.3s;\nanimation-timing-function: ease-in-out;\nanimation-delay: 1s;\nanimation-iteration-count: infinite;\n```\n\n## animation-play-state\nanimation-play-state属性决定CSS animation是运行还是暂停。\n```javascript\nanimation-play-state: running | paused\n```","source":"_posts/animation-详解.md","raw":"---\ntitle: animation-详解\ndate: 2016-04-04 16:22:51\ntags:\n- animation\n- css3\ncategories: 教程\n---\n>A glamorous life is quite different to a life of luxury.\n\n## 简介 \nanimation属性是动画属性的简写，其中包括：\n- animation-name\n- animation-duration\n- animation-timing-function\n- animation-delay\n- animation-iteration-count\n- animation-direction\n- animation-fill-mode\n\n## 用法\nanimation可以定义多个动画属性，需要用逗号分隔。比如： \n```javascript\n/*一个animation定义的时候*/\nanimation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];\n/*多个animation定义的时候*/\nanimation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode],\n[animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];\n```\n其中简写的animation属性用空格分隔，而且他们之间的排序没什么影响，除了animation-duration和animation-delay，他们需要顺序。也就是说当你使用两个time参数的时候，第一个时间指的是animation-duration第二个时间指的是animation-delay。\n\n```javascript\nanimation: bounce 0.3s ease-in-out 1s infinite;\n/*equivalent to*/\nanimation-name: bounce;\nanimation-duration: 0.3s;\nanimation-timing-function: ease-in-out;\nanimation-delay: 1s;\nanimation-iteration-count: infinite;\n```\n\n## animation-play-state\nanimation-play-state属性决定CSS animation是运行还是暂停。\n```javascript\nanimation-play-state: running | paused\n```","slug":"animation-详解","published":1,"updated":"2016-04-04T11:23:56.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimovo3x50000skgjhopoyh5u","content":"<blockquote>\n<p>A glamorous life is quite different to a life of luxury.</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>animation属性是动画属性的简写，其中包括：</p>\n<ul>\n<li>animation-name</li>\n<li>animation-duration</li>\n<li>animation-timing-function</li>\n<li>animation-delay</li>\n<li>animation-iteration-count</li>\n<li>animation-direction</li>\n<li>animation-fill-mode</li>\n</ul>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p>animation可以定义多个动画属性，需要用逗号分隔。比如：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*一个animation定义的时候*/</span><br><span class=\"line\">animation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];</span><br><span class=\"line\">/*多个animation定义的时候*/</span><br><span class=\"line\">animation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode],</span><br><span class=\"line\">[animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];</span><br></pre></td></tr></table></figure></p>\n<p>其中简写的animation属性用空格分隔，而且他们之间的排序没什么影响，除了animation-duration和animation-delay，他们需要顺序。也就是说当你使用两个time参数的时候，第一个时间指的是animation-duration第二个时间指的是animation-delay。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation: bounce <span class=\"number\">0.3</span>s ease-<span class=\"keyword\">in</span>-out <span class=\"number\">1</span>s infinite;</span><br><span class=\"line\"><span class=\"comment\">/*equivalent to*/</span></span><br><span class=\"line\">animation-name: bounce;</span><br><span class=\"line\">animation-duration: <span class=\"number\">0.3</span>s;</span><br><span class=\"line\">animation-timing-<span class=\"function\"><span class=\"keyword\">function</span>: <span class=\"title\">ease</span>-<span class=\"title\">in</span>-<span class=\"title\">out</span>;</span><br><span class=\"line\"><span class=\"title\">animation</span>-<span class=\"title\">delay</span>: 1<span class=\"title\">s</span>;</span><br><span class=\"line\"><span class=\"title\">animation</span>-<span class=\"title\">iteration</span>-<span class=\"title\">count</span>: <span class=\"title\">infinite</span>;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"animation-play-state\"><a href=\"#animation-play-state\" class=\"headerlink\" title=\"animation-play-state\"></a>animation-play-state</h2><p>animation-play-state属性决定CSS animation是运行还是暂停。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-play-state: running | paused</span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<blockquote>\n<p>A glamorous life is quite different to a life of luxury.</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>animation属性是动画属性的简写，其中包括：</p>\n<ul>\n<li>animation-name</li>\n<li>animation-duration</li>\n<li>animation-timing-function</li>\n<li>animation-delay</li>\n<li>animation-iteration-count</li>\n<li>animation-direction</li>\n<li>animation-fill-mode</li>\n</ul>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p>animation可以定义多个动画属性，需要用逗号分隔。比如：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*一个animation定义的时候*/</span><br><span class=\"line\">animation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];</span><br><span class=\"line\">/*多个animation定义的时候*/</span><br><span class=\"line\">animation: [animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode],</span><br><span class=\"line\">[animation-name] [animation-duration] [animation-timing-function] [animation-delay] [animation-iteration-count] [animation-fill-mode];</span><br></pre></td></tr></table></figure></p>\n<p>其中简写的animation属性用空格分隔，而且他们之间的排序没什么影响，除了animation-duration和animation-delay，他们需要顺序。也就是说当你使用两个time参数的时候，第一个时间指的是animation-duration第二个时间指的是animation-delay。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation: bounce <span class=\"number\">0.3</span>s ease-<span class=\"keyword\">in</span>-out <span class=\"number\">1</span>s infinite;</span><br><span class=\"line\"><span class=\"comment\">/*equivalent to*/</span></span><br><span class=\"line\">animation-name: bounce;</span><br><span class=\"line\">animation-duration: <span class=\"number\">0.3</span>s;</span><br><span class=\"line\">animation-timing-<span class=\"function\"><span class=\"keyword\">function</span>: <span class=\"title\">ease</span>-<span class=\"title\">in</span>-<span class=\"title\">out</span>;</span><br><span class=\"line\"><span class=\"title\">animation</span>-<span class=\"title\">delay</span>: 1<span class=\"title\">s</span>;</span><br><span class=\"line\"><span class=\"title\">animation</span>-<span class=\"title\">iteration</span>-<span class=\"title\">count</span>: <span class=\"title\">infinite</span>;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"animation-play-state\"><a href=\"#animation-play-state\" class=\"headerlink\" title=\"animation-play-state\"></a>animation-play-state</h2><p>animation-play-state属性决定CSS animation是运行还是暂停。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-play-state: running | paused</span><br></pre></td></tr></table></figure></p>\n"},{"title":"模块系统","date":"2016-03-17T16:17:04.000Z","_content":"## 系统模块的演进\n模块系统主要解决模块的定义、依赖和导出，现已经存在的模块系统有如下几种。\n  \n### `<script>`标签\n```javascript\n    <script src=\"module1.js\"></script>\n    <script src=\"module2.js\"></script>\n    <script src=\"module3.js\"></script>\n```\n这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的接口调用都是一个作用域，一些复杂的框架，会使用命名空间的概念来组织这些模块的接口，典型的例子如YUI库。  \n\n这种原始的加载方式暴露了一些显而易见的弊端：  \n1. 全局 作用于下容易造成变量冲突  \n2. 文件只能按照`<script>`的书写顺序进行加载\n3. 开发人员必须主观解决模块和代码库的依赖关系\n4. 在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪\n\n### CommonJS\n服务器端的Node.js遵循[CommonJS规范](http://wiki.commonjs.org/wiki/CommonJS)，该规范的核心思想是允许模块通过require方法来同步加载所要依赖的其他模块，然后通过exports或module.exports来导出需要暴露的接口。\n```javascript\n    require(\"module\");  \n    require(\"../file.js\");  \n    exports.doSth = function(){};\n    module.exports = someThing;\n```\n优点：\n1. 服务器端模块便于重用\n2. NPM中已经有将近20万个可以使用的模块包\n3. 简单并容易使用\n\n缺点：\n1. 同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的\n2. 不能非阻塞的并行加载多个模块\n\n实现：\n1. 服务器端的Node.js\n2. Browserify，浏览器端的CommonJS实现，可以使用NPM的模块，但是编译打包后的文件体积可能很大\n3. modules-webmake，类似Browserify，还不如Browserify灵活\n4. wreq，Browserify的前身\n\n### AMD\n[Asynchronous Module Definition](https://github.com/amdjs/amdjs-api) 规范其实只有一个主要的接口define(id?,dependencies?,factory)，它要在声明模块的时候指定所有的依赖dependences，并且还要当做形参传到factory中，对于依赖的模块提前执行，依赖前置。\n```javascript\n    define(\"module\",[\"dep1\".\"dep2\"],function(d1,d2){\n        return someThing;\n    });\n    require([\"module\",\"../files\"],function(module,file){\n        doSomething();\n    })\n```\n优点：\n1. 适合在浏览器环境中异步加载模块\n2. 可以并行加载多个模块\n\n缺点：\n1. 提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅\n2. 不符合通用的模块化思维方式，是一种妥协的实现\n\n实现：\n- [RequireJS](http://requirejs.org/)\n- [curl](https://github.com/cujojs/curl)\n\n### CMD\n[Common Module Definition](https://github.com/cmdjs/specification/blob/master/draft/module.md)规范和AMD很相似，尽量保持简单，并与ComminJS和Node.js的Modules规范保持了很大的兼容性。  \n```javascript\n    define(function(require,exports,module){\n        var $ = require(\"jquery\");\n        exports.doSomething = ...\n        module.exports = ...\n    })\n```\n优点：\n1. 依赖就近，延迟执行\n2. 可以很容易在Nod.js中执行\n\n缺点：\n1. 依赖SPM打包，模块的加载逻辑偏重\n\n实现：\n- [Sea.js](http://seajs.org/)\n- [coolie](https://github.com/cloudcome/coolie)\n\n### UMD\n[Universal Module Definition](https://github.com/umdjs/umd) 规范类似于兼容 CommonJS 和 AMD的语法糖，是模块定义的跨平台解决方案。\n\n### ES6模块\nEcmaScript6 标准增加了JavaScript语言层面的模块体系定义。[ES6模块](http://es6.ruanyifeng.com/#docs/module)的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS和AMD都只能在运行时确认这些东西。\n```javascript\n    import \"jquery\";\n    export function doStuff(){}\n    module \"localModule\" {}\n```\n优点：\n1. 容易进行静态分析\n2. 面向未来的EcmaScript标准\n\n缺点：\n1. 原生浏览器端还没有实现该标准\n2. 全新的命令字，新版的Node.js才支持\n\n实现：\n- [Babel](https://babeljs.io/)\n\n### 期望的模块系统\n可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅是Javascript模块化，还有CSS、图片、字体等资源也需要模块化。\n\n## 前端模块加载\n前端模块要在客户端中执行，所以他们需要增量加载到浏览器中。  \n模块的加载和传输，我们首先能想到两种极端的方式，一种是每个模块文件都单独请求，另一种是所有模块打包成一个文件然后只请求一次。显而易见，每个模块都发起单独的请求造成了请求次数过多，导致应用启动速度慢；一次请求加载所有模块导致流量浪费、初始化过程慢。这两种方式都不是好的解决方案，它们过于简单粗暴。  \n***分块传输***，按需进行懒加载，在实际用到某些模块的时候再增量更新，才是较为合理的模块加载方案。  \n要实现模块的按需加载，就需要一个对整个代码库的模块进行静态分析、编译打包的过程。\n\n## 所有资源都是模块\n在上面的分析过程中，我们提到的模块仅仅是指JavaScript模块文件。然而，在前端开发过程中还涉及到样式、图片、字体、HTML 模板等等众多的资源。这些资源还会以各种方言的形式存在，比如 coffeescript、 less、 sass、众多的模板库、多语言系统（i18n）等等。\n\n如果他们都可以视作模块，并且都可以通过require的方式来加载，将带来优雅的开发体验，比如：\n```javascript\n    require(\"./style.css\");\n    require(\"./style.less\");\n    require(\"./template.jade\");\n    require(\"./image.png\");\n```\n\n## 静态分析\n在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的记载其来处理。比如一个用LESS写的样式模块，可以先用LESS加载器将它转成一个CSS模块，再通过CSS模块把他插入到页面的<script>标签中执行。Webpack就是这样的需求中应运而生。\n同时，为了能利用已经存在的各种框架、库和已经写好的文件，我们还需要一个模块加载的兼容策略，来避免重写所有的模块。","source":"_posts/模块系统.md","raw":"---\ntitle: 模块系统\ndate: 2016-03-18 00:17:04\ntags:\n- webpack\n- 模块系统\ncategories: 教程\n---\n## 系统模块的演进\n模块系统主要解决模块的定义、依赖和导出，现已经存在的模块系统有如下几种。\n  \n### `<script>`标签\n```javascript\n    <script src=\"module1.js\"></script>\n    <script src=\"module2.js\"></script>\n    <script src=\"module3.js\"></script>\n```\n这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的接口调用都是一个作用域，一些复杂的框架，会使用命名空间的概念来组织这些模块的接口，典型的例子如YUI库。  \n\n这种原始的加载方式暴露了一些显而易见的弊端：  \n1. 全局 作用于下容易造成变量冲突  \n2. 文件只能按照`<script>`的书写顺序进行加载\n3. 开发人员必须主观解决模块和代码库的依赖关系\n4. 在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪\n\n### CommonJS\n服务器端的Node.js遵循[CommonJS规范](http://wiki.commonjs.org/wiki/CommonJS)，该规范的核心思想是允许模块通过require方法来同步加载所要依赖的其他模块，然后通过exports或module.exports来导出需要暴露的接口。\n```javascript\n    require(\"module\");  \n    require(\"../file.js\");  \n    exports.doSth = function(){};\n    module.exports = someThing;\n```\n优点：\n1. 服务器端模块便于重用\n2. NPM中已经有将近20万个可以使用的模块包\n3. 简单并容易使用\n\n缺点：\n1. 同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的\n2. 不能非阻塞的并行加载多个模块\n\n实现：\n1. 服务器端的Node.js\n2. Browserify，浏览器端的CommonJS实现，可以使用NPM的模块，但是编译打包后的文件体积可能很大\n3. modules-webmake，类似Browserify，还不如Browserify灵活\n4. wreq，Browserify的前身\n\n### AMD\n[Asynchronous Module Definition](https://github.com/amdjs/amdjs-api) 规范其实只有一个主要的接口define(id?,dependencies?,factory)，它要在声明模块的时候指定所有的依赖dependences，并且还要当做形参传到factory中，对于依赖的模块提前执行，依赖前置。\n```javascript\n    define(\"module\",[\"dep1\".\"dep2\"],function(d1,d2){\n        return someThing;\n    });\n    require([\"module\",\"../files\"],function(module,file){\n        doSomething();\n    })\n```\n优点：\n1. 适合在浏览器环境中异步加载模块\n2. 可以并行加载多个模块\n\n缺点：\n1. 提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅\n2. 不符合通用的模块化思维方式，是一种妥协的实现\n\n实现：\n- [RequireJS](http://requirejs.org/)\n- [curl](https://github.com/cujojs/curl)\n\n### CMD\n[Common Module Definition](https://github.com/cmdjs/specification/blob/master/draft/module.md)规范和AMD很相似，尽量保持简单，并与ComminJS和Node.js的Modules规范保持了很大的兼容性。  \n```javascript\n    define(function(require,exports,module){\n        var $ = require(\"jquery\");\n        exports.doSomething = ...\n        module.exports = ...\n    })\n```\n优点：\n1. 依赖就近，延迟执行\n2. 可以很容易在Nod.js中执行\n\n缺点：\n1. 依赖SPM打包，模块的加载逻辑偏重\n\n实现：\n- [Sea.js](http://seajs.org/)\n- [coolie](https://github.com/cloudcome/coolie)\n\n### UMD\n[Universal Module Definition](https://github.com/umdjs/umd) 规范类似于兼容 CommonJS 和 AMD的语法糖，是模块定义的跨平台解决方案。\n\n### ES6模块\nEcmaScript6 标准增加了JavaScript语言层面的模块体系定义。[ES6模块](http://es6.ruanyifeng.com/#docs/module)的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS和AMD都只能在运行时确认这些东西。\n```javascript\n    import \"jquery\";\n    export function doStuff(){}\n    module \"localModule\" {}\n```\n优点：\n1. 容易进行静态分析\n2. 面向未来的EcmaScript标准\n\n缺点：\n1. 原生浏览器端还没有实现该标准\n2. 全新的命令字，新版的Node.js才支持\n\n实现：\n- [Babel](https://babeljs.io/)\n\n### 期望的模块系统\n可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅是Javascript模块化，还有CSS、图片、字体等资源也需要模块化。\n\n## 前端模块加载\n前端模块要在客户端中执行，所以他们需要增量加载到浏览器中。  \n模块的加载和传输，我们首先能想到两种极端的方式，一种是每个模块文件都单独请求，另一种是所有模块打包成一个文件然后只请求一次。显而易见，每个模块都发起单独的请求造成了请求次数过多，导致应用启动速度慢；一次请求加载所有模块导致流量浪费、初始化过程慢。这两种方式都不是好的解决方案，它们过于简单粗暴。  \n***分块传输***，按需进行懒加载，在实际用到某些模块的时候再增量更新，才是较为合理的模块加载方案。  \n要实现模块的按需加载，就需要一个对整个代码库的模块进行静态分析、编译打包的过程。\n\n## 所有资源都是模块\n在上面的分析过程中，我们提到的模块仅仅是指JavaScript模块文件。然而，在前端开发过程中还涉及到样式、图片、字体、HTML 模板等等众多的资源。这些资源还会以各种方言的形式存在，比如 coffeescript、 less、 sass、众多的模板库、多语言系统（i18n）等等。\n\n如果他们都可以视作模块，并且都可以通过require的方式来加载，将带来优雅的开发体验，比如：\n```javascript\n    require(\"./style.css\");\n    require(\"./style.less\");\n    require(\"./template.jade\");\n    require(\"./image.png\");\n```\n\n## 静态分析\n在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的记载其来处理。比如一个用LESS写的样式模块，可以先用LESS加载器将它转成一个CSS模块，再通过CSS模块把他插入到页面的<script>标签中执行。Webpack就是这样的需求中应运而生。\n同时，为了能利用已经存在的各种框架、库和已经写好的文件，我们还需要一个模块加载的兼容策略，来避免重写所有的模块。","slug":"模块系统","published":1,"updated":"2016-03-22T12:54:31.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimovo3xh0002skgj08geknm3","content":"<h2 id=\"系统模块的演进\"><a href=\"#系统模块的演进\" class=\"headerlink\" title=\"系统模块的演进\"></a>系统模块的演进</h2><p>模块系统主要解决模块的定义、依赖和导出，现已经存在的模块系统有如下几种。</p>\n<h3 id=\"lt-script-gt-标签\"><a href=\"#lt-script-gt-标签\" class=\"headerlink\" title=\"&lt;script&gt;标签\"></a><code>&lt;script&gt;</code>标签</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"module1.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"module2.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"module3.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的接口调用都是一个作用域，一些复杂的框架，会使用命名空间的概念来组织这些模块的接口，典型的例子如YUI库。  </p>\n<p>这种原始的加载方式暴露了一些显而易见的弊端：  </p>\n<ol>\n<li>全局 作用于下容易造成变量冲突  </li>\n<li>文件只能按照<code>&lt;script&gt;</code>的书写顺序进行加载</li>\n<li>开发人员必须主观解决模块和代码库的依赖关系</li>\n<li>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪</li>\n</ol>\n<h3 id=\"CommonJS\"><a href=\"#CommonJS\" class=\"headerlink\" title=\"CommonJS\"></a>CommonJS</h3><p>服务器端的Node.js遵循<a href=\"http://wiki.commonjs.org/wiki/CommonJS\" target=\"_blank\" rel=\"external\">CommonJS规范</a>，该规范的核心思想是允许模块通过require方法来同步加载所要依赖的其他模块，然后通过exports或module.exports来导出需要暴露的接口。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"module\"</span>);  </span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"../file.js\"</span>);  </span><br><span class=\"line\">exports.doSth = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = someThing;</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>服务器端模块便于重用</li>\n<li>NPM中已经有将近20万个可以使用的模块包</li>\n<li>简单并容易使用</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的</li>\n<li>不能非阻塞的并行加载多个模块</li>\n</ol>\n<p>实现：</p>\n<ol>\n<li>服务器端的Node.js</li>\n<li>Browserify，浏览器端的CommonJS实现，可以使用NPM的模块，但是编译打包后的文件体积可能很大</li>\n<li>modules-webmake，类似Browserify，还不如Browserify灵活</li>\n<li>wreq，Browserify的前身</li>\n</ol>\n<h3 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h3><p><a href=\"https://github.com/amdjs/amdjs-api\" target=\"_blank\" rel=\"external\">Asynchronous Module Definition</a> 规范其实只有一个主要的接口define(id?,dependencies?,factory)，它要在声明模块的时候指定所有的依赖dependences，并且还要当做形参传到factory中，对于依赖的模块提前执行，依赖前置。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">\"module\"</span>,[<span class=\"string\">\"dep1\"</span>.<span class=\"string\">\"dep2\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d1,d2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> someThing;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">\"module\"</span>,<span class=\"string\">\"../files\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">module,file</span>)</span>&#123;</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>适合在浏览器环境中异步加载模块</li>\n<li>可以并行加载多个模块</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅</li>\n<li>不符合通用的模块化思维方式，是一种妥协的实现</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"http://requirejs.org/\" target=\"_blank\" rel=\"external\">RequireJS</a></li>\n<li><a href=\"https://github.com/cujojs/curl\" target=\"_blank\" rel=\"external\">curl</a></li>\n</ul>\n<h3 id=\"CMD\"><a href=\"#CMD\" class=\"headerlink\" title=\"CMD\"></a>CMD</h3><p><a href=\"https://github.com/cmdjs/specification/blob/master/draft/module.md\" target=\"_blank\" rel=\"external\">Common Module Definition</a>规范和AMD很相似，尽量保持简单，并与ComminJS和Node.js的Modules规范保持了很大的兼容性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require,exports,module</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">\"jquery\"</span>);</span><br><span class=\"line\">    exports.doSomething = ...</span><br><span class=\"line\">    module.exports = ...</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>依赖就近，延迟执行</li>\n<li>可以很容易在Nod.js中执行</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>依赖SPM打包，模块的加载逻辑偏重</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"http://seajs.org/\" target=\"_blank\" rel=\"external\">Sea.js</a></li>\n<li><a href=\"https://github.com/cloudcome/coolie\" target=\"_blank\" rel=\"external\">coolie</a></li>\n</ul>\n<h3 id=\"UMD\"><a href=\"#UMD\" class=\"headerlink\" title=\"UMD\"></a>UMD</h3><p><a href=\"https://github.com/umdjs/umd\" target=\"_blank\" rel=\"external\">Universal Module Definition</a> 规范类似于兼容 CommonJS 和 AMD的语法糖，是模块定义的跨平台解决方案。</p>\n<h3 id=\"ES6模块\"><a href=\"#ES6模块\" class=\"headerlink\" title=\"ES6模块\"></a>ES6模块</h3><p>EcmaScript6 标准增加了JavaScript语言层面的模块体系定义。<a href=\"http://es6.ruanyifeng.com/#docs/module\" target=\"_blank\" rel=\"external\">ES6模块</a>的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS和AMD都只能在运行时确认这些东西。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"jquery\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doStuff</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span> <span class=\"string\">\"localModule\"</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>容易进行静态分析</li>\n<li>面向未来的EcmaScript标准</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>原生浏览器端还没有实现该标准</li>\n<li>全新的命令字，新版的Node.js才支持</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a></li>\n</ul>\n<h3 id=\"期望的模块系统\"><a href=\"#期望的模块系统\" class=\"headerlink\" title=\"期望的模块系统\"></a>期望的模块系统</h3><p>可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅是Javascript模块化，还有CSS、图片、字体等资源也需要模块化。</p>\n<h2 id=\"前端模块加载\"><a href=\"#前端模块加载\" class=\"headerlink\" title=\"前端模块加载\"></a>前端模块加载</h2><p>前端模块要在客户端中执行，所以他们需要增量加载到浏览器中。<br>模块的加载和传输，我们首先能想到两种极端的方式，一种是每个模块文件都单独请求，另一种是所有模块打包成一个文件然后只请求一次。显而易见，每个模块都发起单独的请求造成了请求次数过多，导致应用启动速度慢；一次请求加载所有模块导致流量浪费、初始化过程慢。这两种方式都不是好的解决方案，它们过于简单粗暴。<br><strong><em>分块传输</em></strong>，按需进行懒加载，在实际用到某些模块的时候再增量更新，才是较为合理的模块加载方案。<br>要实现模块的按需加载，就需要一个对整个代码库的模块进行静态分析、编译打包的过程。</p>\n<h2 id=\"所有资源都是模块\"><a href=\"#所有资源都是模块\" class=\"headerlink\" title=\"所有资源都是模块\"></a>所有资源都是模块</h2><p>在上面的分析过程中，我们提到的模块仅仅是指JavaScript模块文件。然而，在前端开发过程中还涉及到样式、图片、字体、HTML 模板等等众多的资源。这些资源还会以各种方言的形式存在，比如 coffeescript、 less、 sass、众多的模板库、多语言系统（i18n）等等。</p>\n<p>如果他们都可以视作模块，并且都可以通过require的方式来加载，将带来优雅的开发体验，比如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./style.css\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./style.less\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./template.jade\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./image.png\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"静态分析\"><a href=\"#静态分析\" class=\"headerlink\" title=\"静态分析\"></a>静态分析</h2><p>在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的记载其来处理。比如一个用LESS写的样式模块，可以先用LESS加载器将它转成一个CSS模块，再通过CSS模块把他插入到页面的<script>标签中执行。Webpack就是这样的需求中应运而生。<br>同时，为了能利用已经存在的各种框架、库和已经写好的文件，我们还需要一个模块加载的兼容策略，来避免重写所有的模块。</p>\n</script></p>","excerpt":"","more":"<h2 id=\"系统模块的演进\"><a href=\"#系统模块的演进\" class=\"headerlink\" title=\"系统模块的演进\"></a>系统模块的演进</h2><p>模块系统主要解决模块的定义、依赖和导出，现已经存在的模块系统有如下几种。</p>\n<h3 id=\"lt-script-gt-标签\"><a href=\"#lt-script-gt-标签\" class=\"headerlink\" title=\"&lt;script&gt;标签\"></a><code>&lt;script&gt;</code>标签</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"module1.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"module2.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"module3.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的接口调用都是一个作用域，一些复杂的框架，会使用命名空间的概念来组织这些模块的接口，典型的例子如YUI库。  </p>\n<p>这种原始的加载方式暴露了一些显而易见的弊端：  </p>\n<ol>\n<li>全局 作用于下容易造成变量冲突  </li>\n<li>文件只能按照<code>&lt;script&gt;</code>的书写顺序进行加载</li>\n<li>开发人员必须主观解决模块和代码库的依赖关系</li>\n<li>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪</li>\n</ol>\n<h3 id=\"CommonJS\"><a href=\"#CommonJS\" class=\"headerlink\" title=\"CommonJS\"></a>CommonJS</h3><p>服务器端的Node.js遵循<a href=\"http://wiki.commonjs.org/wiki/CommonJS\">CommonJS规范</a>，该规范的核心思想是允许模块通过require方法来同步加载所要依赖的其他模块，然后通过exports或module.exports来导出需要暴露的接口。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"module\"</span>);  </span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"../file.js\"</span>);  </span><br><span class=\"line\">exports.doSth = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = someThing;</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>服务器端模块便于重用</li>\n<li>NPM中已经有将近20万个可以使用的模块包</li>\n<li>简单并容易使用</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的</li>\n<li>不能非阻塞的并行加载多个模块</li>\n</ol>\n<p>实现：</p>\n<ol>\n<li>服务器端的Node.js</li>\n<li>Browserify，浏览器端的CommonJS实现，可以使用NPM的模块，但是编译打包后的文件体积可能很大</li>\n<li>modules-webmake，类似Browserify，还不如Browserify灵活</li>\n<li>wreq，Browserify的前身</li>\n</ol>\n<h3 id=\"AMD\"><a href=\"#AMD\" class=\"headerlink\" title=\"AMD\"></a>AMD</h3><p><a href=\"https://github.com/amdjs/amdjs-api\">Asynchronous Module Definition</a> 规范其实只有一个主要的接口define(id?,dependencies?,factory)，它要在声明模块的时候指定所有的依赖dependences，并且还要当做形参传到factory中，对于依赖的模块提前执行，依赖前置。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">\"module\"</span>,[<span class=\"string\">\"dep1\"</span>.<span class=\"string\">\"dep2\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d1,d2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> someThing;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">\"module\"</span>,<span class=\"string\">\"../files\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">module,file</span>)</span>&#123;</span><br><span class=\"line\">    doSomething();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>适合在浏览器环境中异步加载模块</li>\n<li>可以并行加载多个模块</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不顺畅</li>\n<li>不符合通用的模块化思维方式，是一种妥协的实现</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"http://requirejs.org/\">RequireJS</a></li>\n<li><a href=\"https://github.com/cujojs/curl\">curl</a></li>\n</ul>\n<h3 id=\"CMD\"><a href=\"#CMD\" class=\"headerlink\" title=\"CMD\"></a>CMD</h3><p><a href=\"https://github.com/cmdjs/specification/blob/master/draft/module.md\">Common Module Definition</a>规范和AMD很相似，尽量保持简单，并与ComminJS和Node.js的Modules规范保持了很大的兼容性。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require,exports,module</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $ = <span class=\"built_in\">require</span>(<span class=\"string\">\"jquery\"</span>);</span><br><span class=\"line\">    exports.doSomething = ...</span><br><span class=\"line\">    module.exports = ...</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>依赖就近，延迟执行</li>\n<li>可以很容易在Nod.js中执行</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>依赖SPM打包，模块的加载逻辑偏重</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"http://seajs.org/\">Sea.js</a></li>\n<li><a href=\"https://github.com/cloudcome/coolie\">coolie</a></li>\n</ul>\n<h3 id=\"UMD\"><a href=\"#UMD\" class=\"headerlink\" title=\"UMD\"></a>UMD</h3><p><a href=\"https://github.com/umdjs/umd\">Universal Module Definition</a> 规范类似于兼容 CommonJS 和 AMD的语法糖，是模块定义的跨平台解决方案。</p>\n<h3 id=\"ES6模块\"><a href=\"#ES6模块\" class=\"headerlink\" title=\"ES6模块\"></a>ES6模块</h3><p>EcmaScript6 标准增加了JavaScript语言层面的模块体系定义。<a href=\"http://es6.ruanyifeng.com/#docs/module\">ES6模块</a>的设计思想，是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS和AMD都只能在运行时确认这些东西。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"jquery\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doStuff</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span> <span class=\"string\">\"localModule\"</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>优点：</p>\n<ol>\n<li>容易进行静态分析</li>\n<li>面向未来的EcmaScript标准</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>原生浏览器端还没有实现该标准</li>\n<li>全新的命令字，新版的Node.js才支持</li>\n</ol>\n<p>实现：</p>\n<ul>\n<li><a href=\"https://babeljs.io/\">Babel</a></li>\n</ul>\n<h3 id=\"期望的模块系统\"><a href=\"#期望的模块系统\" class=\"headerlink\" title=\"期望的模块系统\"></a>期望的模块系统</h3><p>可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅是Javascript模块化，还有CSS、图片、字体等资源也需要模块化。</p>\n<h2 id=\"前端模块加载\"><a href=\"#前端模块加载\" class=\"headerlink\" title=\"前端模块加载\"></a>前端模块加载</h2><p>前端模块要在客户端中执行，所以他们需要增量加载到浏览器中。<br>模块的加载和传输，我们首先能想到两种极端的方式，一种是每个模块文件都单独请求，另一种是所有模块打包成一个文件然后只请求一次。显而易见，每个模块都发起单独的请求造成了请求次数过多，导致应用启动速度慢；一次请求加载所有模块导致流量浪费、初始化过程慢。这两种方式都不是好的解决方案，它们过于简单粗暴。<br><strong><em>分块传输</em></strong>，按需进行懒加载，在实际用到某些模块的时候再增量更新，才是较为合理的模块加载方案。<br>要实现模块的按需加载，就需要一个对整个代码库的模块进行静态分析、编译打包的过程。</p>\n<h2 id=\"所有资源都是模块\"><a href=\"#所有资源都是模块\" class=\"headerlink\" title=\"所有资源都是模块\"></a>所有资源都是模块</h2><p>在上面的分析过程中，我们提到的模块仅仅是指JavaScript模块文件。然而，在前端开发过程中还涉及到样式、图片、字体、HTML 模板等等众多的资源。这些资源还会以各种方言的形式存在，比如 coffeescript、 less、 sass、众多的模板库、多语言系统（i18n）等等。</p>\n<p>如果他们都可以视作模块，并且都可以通过require的方式来加载，将带来优雅的开发体验，比如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./style.css\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./style.less\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./template.jade\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">\"./image.png\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"静态分析\"><a href=\"#静态分析\" class=\"headerlink\" title=\"静态分析\"></a>静态分析</h2><p>在编译的时候，要对整个代码进行静态分析，分析出各个模块的类型和它们依赖关系，然后将不同类型的模块提交给适配的记载其来处理。比如一个用LESS写的样式模块，可以先用LESS加载器将它转成一个CSS模块，再通过CSS模块把他插入到页面的<script>标签中执行。Webpack就是这样的需求中应运而生。<br>同时，为了能利用已经存在的各种框架、库和已经写好的文件，我们还需要一个模块加载的兼容策略，来避免重写所有的模块。</p>\n"},{"title":"zepto学习笔记","date":"2015-10-27T06:21:46.000Z","_content":"\n> Zepto的设计目的是有一个5-10K的通用库、下载并快速执行、有一个熟悉通用的API。\n\n| module | default | description |\n| ------ | :-------: | :----------- |\n| zepto\t| ✔\t| 核心模块；包含许多方法 |\n| event\t| ✔|\t通过on()& off()处理事件 |\n| ajax\t| ✔|\tXMLHttpRequest 和 JSONP 实用功能 |\n| form\t| ✔|\t序列化 & 提交web表单 |\n| ie\t|✔| \t增加支持桌面的Internet Explorer 10+和Windows Phone 8。 |\n| detect| |\t\t提供 $.os和 $.browser消息 |\n| fx\t\t| | The animate()方法 |\n| fx_methods|\t|\t以动画形式的 show, hide, toggle, 和 fade*()方法. |\n| assets|\t|\t实验性支持从DOM中移除image元素后清理iOS的内存。 |\n| data\t|\t|一个全面的 data()方法, 能够在内存中存储任意对象。 |\n|deferred |\t|\t提供 $.Deferredpromises API. 依赖\"callbacks\" 模块. 当包含这个模块时候, $.ajax() 支持promise接口链式的回调。 |\n| callbacks\t| |\t为\"deferred\"模块提供 $.Callbacks。 |\n| touch\t\t| | 在触摸设备上触发tap– 和 swipe– 相关事件。这适用于所有的`touch`(iOS, Android)和`pointer`事件(Windows Phone)。 |\n| gesture\t| |\t在触摸设备上触发 pinch 手势事件。 |\n| stack\t\t| | 提供 andSelf& end()链式调用方法 |\n| ios3\t\t| | String.prototype.trim 和 Array.prototype.reduce 方法 (如果他们不存在) ，以兼容 iOS 3.x. |\n\n## 如何自制zepto\n```\n    1.git clone https://github.com/madrobby/zepto.git\n    2.npm install 下载package.json里dependence\n    3.MODULES=\"zepto event data ...\" npm run-script dist\n    the resulting files are:\n    1.dist/zepto.js\n    2.dist/zepto.min.js\n```\n\n--- \n   \n### 整体上zeptojs的用法和jquery一样","source":"_posts/zepto学习笔记.md","raw":"title: zepto学习笔记\ndate: 2015-10-27 14:21:46\ntags:\n- zepto\n- 学习笔记\ncategories: 笔记\n---\n\n> Zepto的设计目的是有一个5-10K的通用库、下载并快速执行、有一个熟悉通用的API。\n\n| module | default | description |\n| ------ | :-------: | :----------- |\n| zepto\t| ✔\t| 核心模块；包含许多方法 |\n| event\t| ✔|\t通过on()& off()处理事件 |\n| ajax\t| ✔|\tXMLHttpRequest 和 JSONP 实用功能 |\n| form\t| ✔|\t序列化 & 提交web表单 |\n| ie\t|✔| \t增加支持桌面的Internet Explorer 10+和Windows Phone 8。 |\n| detect| |\t\t提供 $.os和 $.browser消息 |\n| fx\t\t| | The animate()方法 |\n| fx_methods|\t|\t以动画形式的 show, hide, toggle, 和 fade*()方法. |\n| assets|\t|\t实验性支持从DOM中移除image元素后清理iOS的内存。 |\n| data\t|\t|一个全面的 data()方法, 能够在内存中存储任意对象。 |\n|deferred |\t|\t提供 $.Deferredpromises API. 依赖\"callbacks\" 模块. 当包含这个模块时候, $.ajax() 支持promise接口链式的回调。 |\n| callbacks\t| |\t为\"deferred\"模块提供 $.Callbacks。 |\n| touch\t\t| | 在触摸设备上触发tap– 和 swipe– 相关事件。这适用于所有的`touch`(iOS, Android)和`pointer`事件(Windows Phone)。 |\n| gesture\t| |\t在触摸设备上触发 pinch 手势事件。 |\n| stack\t\t| | 提供 andSelf& end()链式调用方法 |\n| ios3\t\t| | String.prototype.trim 和 Array.prototype.reduce 方法 (如果他们不存在) ，以兼容 iOS 3.x. |\n\n## 如何自制zepto\n```\n    1.git clone https://github.com/madrobby/zepto.git\n    2.npm install 下载package.json里dependence\n    3.MODULES=\"zepto event data ...\" npm run-script dist\n    the resulting files are:\n    1.dist/zepto.js\n    2.dist/zepto.min.js\n```\n\n--- \n   \n### 整体上zeptojs的用法和jquery一样","slug":"zepto学习笔记","published":1,"updated":"2016-03-22T12:54:31.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimovo3xo0005skgjucmwydqs","content":"<blockquote>\n<p>Zepto的设计目的是有一个5-10K的通用库、下载并快速执行、有一个熟悉通用的API。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>module</th>\n<th style=\"text-align:center\">default</th>\n<th style=\"text-align:left\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zepto</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">核心模块；包含许多方法</td>\n</tr>\n<tr>\n<td>event</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">通过on()&amp; off()处理事件</td>\n</tr>\n<tr>\n<td>ajax</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">XMLHttpRequest 和 JSONP 实用功能</td>\n</tr>\n<tr>\n<td>form</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">序列化 &amp; 提交web表单</td>\n</tr>\n<tr>\n<td>ie</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">增加支持桌面的Internet Explorer 10+和Windows Phone 8。</td>\n</tr>\n<tr>\n<td>detect</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 $.os和 $.browser消息</td>\n</tr>\n<tr>\n<td>fx</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">The animate()方法</td>\n</tr>\n<tr>\n<td>fx_methods</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">以动画形式的 show, hide, toggle, 和 fade*()方法.</td>\n</tr>\n<tr>\n<td>assets</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">实验性支持从DOM中移除image元素后清理iOS的内存。</td>\n</tr>\n<tr>\n<td>data</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">一个全面的 data()方法, 能够在内存中存储任意对象。</td>\n</tr>\n<tr>\n<td>deferred</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 $.Deferredpromises API. 依赖”callbacks” 模块. 当包含这个模块时候, $.ajax() 支持promise接口链式的回调。</td>\n</tr>\n<tr>\n<td>callbacks</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">为”deferred”模块提供 $.Callbacks。</td>\n</tr>\n<tr>\n<td>touch</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">在触摸设备上触发tap– 和 swipe– 相关事件。这适用于所有的<code>touch</code>(iOS, Android)和<code>pointer</code>事件(Windows Phone)。</td>\n</tr>\n<tr>\n<td>gesture</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">在触摸设备上触发 pinch 手势事件。</td>\n</tr>\n<tr>\n<td>stack</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 andSelf&amp; end()链式调用方法</td>\n</tr>\n<tr>\n<td>ios3</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">String.prototype.trim 和 Array.prototype.reduce 方法 (如果他们不存在) ，以兼容 iOS 3.x.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"如何自制zepto\"><a href=\"#如何自制zepto\" class=\"headerlink\" title=\"如何自制zepto\"></a>如何自制zepto</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.git clone https://github.com/madrobby/zepto.git</span><br><span class=\"line\">2.npm install 下载package.json里dependence</span><br><span class=\"line\">3.MODULES=&quot;zepto event data ...&quot; npm run-script dist</span><br><span class=\"line\">the resulting files are:</span><br><span class=\"line\">1.dist/zepto.js</span><br><span class=\"line\">2.dist/zepto.min.js</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"整体上zeptojs的用法和jquery一样\"><a href=\"#整体上zeptojs的用法和jquery一样\" class=\"headerlink\" title=\"整体上zeptojs的用法和jquery一样\"></a>整体上zeptojs的用法和jquery一样</h3>","excerpt":"","more":"<blockquote>\n<p>Zepto的设计目的是有一个5-10K的通用库、下载并快速执行、有一个熟悉通用的API。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>module</th>\n<th style=\"text-align:center\">default</th>\n<th style=\"text-align:left\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zepto</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">核心模块；包含许多方法</td>\n</tr>\n<tr>\n<td>event</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">通过on()&amp; off()处理事件</td>\n</tr>\n<tr>\n<td>ajax</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">XMLHttpRequest 和 JSONP 实用功能</td>\n</tr>\n<tr>\n<td>form</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">序列化 &amp; 提交web表单</td>\n</tr>\n<tr>\n<td>ie</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:left\">增加支持桌面的Internet Explorer 10+和Windows Phone 8。</td>\n</tr>\n<tr>\n<td>detect</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 $.os和 $.browser消息</td>\n</tr>\n<tr>\n<td>fx</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">The animate()方法</td>\n</tr>\n<tr>\n<td>fx_methods</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">以动画形式的 show, hide, toggle, 和 fade*()方法.</td>\n</tr>\n<tr>\n<td>assets</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">实验性支持从DOM中移除image元素后清理iOS的内存。</td>\n</tr>\n<tr>\n<td>data</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">一个全面的 data()方法, 能够在内存中存储任意对象。</td>\n</tr>\n<tr>\n<td>deferred</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 $.Deferredpromises API. 依赖”callbacks” 模块. 当包含这个模块时候, $.ajax() 支持promise接口链式的回调。</td>\n</tr>\n<tr>\n<td>callbacks</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">为”deferred”模块提供 $.Callbacks。</td>\n</tr>\n<tr>\n<td>touch</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">在触摸设备上触发tap– 和 swipe– 相关事件。这适用于所有的<code>touch</code>(iOS, Android)和<code>pointer</code>事件(Windows Phone)。</td>\n</tr>\n<tr>\n<td>gesture</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">在触摸设备上触发 pinch 手势事件。</td>\n</tr>\n<tr>\n<td>stack</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">提供 andSelf&amp; end()链式调用方法</td>\n</tr>\n<tr>\n<td>ios3</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:left\">String.prototype.trim 和 Array.prototype.reduce 方法 (如果他们不存在) ，以兼容 iOS 3.x.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"如何自制zepto\"><a href=\"#如何自制zepto\" class=\"headerlink\" title=\"如何自制zepto\"></a>如何自制zepto</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.git clone https://github.com/madrobby/zepto.git</span><br><span class=\"line\">2.npm install 下载package.json里dependence</span><br><span class=\"line\">3.MODULES=&quot;zepto event data ...&quot; npm run-script dist</span><br><span class=\"line\">the resulting files are:</span><br><span class=\"line\">1.dist/zepto.js</span><br><span class=\"line\">2.dist/zepto.min.js</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"整体上zeptojs的用法和jquery一样\"><a href=\"#整体上zeptojs的用法和jquery一样\" class=\"headerlink\" title=\"整体上zeptojs的用法和jquery一样\"></a>整体上zeptojs的用法和jquery一样</h3>"},{"title":"webapck直接上手","date":"2016-03-22T06:26:43.000Z","_content":">True mastery of any skill takes a lifetime.\n\n写在前面的话，花了一天一夜学得的webpack，并且都把webapck.config.js配置完成了，leader不让用，还说不要盲目跟风。无语，遂把学得的东西贡献出来。\n\n## Getting started\n\n首先，全局下载[webpack](https://www.npmjs.com/package/webpack)和[live-server](https://www.npmjs.com/package/live-server)。  \n***ps***：这边可自行选择，[live-server](https://www.npmjs.com/package/live-server)或是[webpack-dev-server](https://www.npmjs.com/package/webpack-dev-server)，我用的是live-server。\n\n```javascript\n$ npm install -g webpack live-server \n```\n\n然后，git直接clone本仓库以及依赖包\n\n```javascript\n$ git clone https://github.com/GaoQ1/webpack-start.git\n$ cd webpack-scaffold\n$ npm install\n```\n\n现在你可以试试webpack的效果了。\n\n```javascript\n$ webpack\n$ live-server\n```\n\n浏览器会自动打开，然后点击src，访问路径为[http://127.0.0.1:8080/src/](http://127.0.0.1:8080/src/)。 \n\n## 什么是webpack\n至于什么是webpack，网上有很多资料，我就不copy过来了，详细的可参考\n - [Webpack中文指南](http://zhaoda.net/webpack-handbook/)\n - [Webpack官网](http://webpack.github.io/docs/)\n\n还有关于webpack的常用的命令行有：\n```javascript\n $ webpack //用来一次性执行开发环境webpack\n $ webpack -p //用来一次性执行生产环境webpack\n $ webpack --watch //用来持续的执行webpack\n $ webpack -d //包含source maps文件\n $ webpack --colors //用来让wenbpack执行后的文件更优美\n```\n\n## 目录结构\n```javascript\n--- dist (webpac打包后的文件)\n    |--- ...\n--- images (图片文件)\n    |--- ...\n--- src (webpack打包前源文件)\n    |--- js (源文件组件文件夹)\n    |    |--- client.js (javascript文件)\n    |    |--- image.js (image文件)\n    |    |--- style.js (css文件)\n    | \t |...\n    |--- sass (sass文件夹)          \n    |    |--- app.scss (sass文件)\n    |    |---\n    |--- index.html (主页面)\n    |--- package.json (配置文件)\n    |--- webpack.config.js (webpack配置文件) \n```\n\n## 参考文章\n关于webpack.config.js的文件配置参考了\n - 阮大神的[webpack-demos](https://github.com/ruanyf/webpack-demos)\n - Petehunt大神的[webpack-howto](https://github.com/petehunt/webpack-howto)\n - [Webpack documents](https://webpack.github.io/docs/)\n - 鄙人的[blog](http://blog.gaoquan.wang)，会长期更新","source":"_posts/webapck配置指导.md","raw":"---\ntitle: webapck直接上手\ndate: 2016-03-22 14:26:43\ntags:\n- webpack\n- 快速上手\ncategories: 教程\n---\n>True mastery of any skill takes a lifetime.\n\n写在前面的话，花了一天一夜学得的webpack，并且都把webapck.config.js配置完成了，leader不让用，还说不要盲目跟风。无语，遂把学得的东西贡献出来。\n\n## Getting started\n\n首先，全局下载[webpack](https://www.npmjs.com/package/webpack)和[live-server](https://www.npmjs.com/package/live-server)。  \n***ps***：这边可自行选择，[live-server](https://www.npmjs.com/package/live-server)或是[webpack-dev-server](https://www.npmjs.com/package/webpack-dev-server)，我用的是live-server。\n\n```javascript\n$ npm install -g webpack live-server \n```\n\n然后，git直接clone本仓库以及依赖包\n\n```javascript\n$ git clone https://github.com/GaoQ1/webpack-start.git\n$ cd webpack-scaffold\n$ npm install\n```\n\n现在你可以试试webpack的效果了。\n\n```javascript\n$ webpack\n$ live-server\n```\n\n浏览器会自动打开，然后点击src，访问路径为[http://127.0.0.1:8080/src/](http://127.0.0.1:8080/src/)。 \n\n## 什么是webpack\n至于什么是webpack，网上有很多资料，我就不copy过来了，详细的可参考\n - [Webpack中文指南](http://zhaoda.net/webpack-handbook/)\n - [Webpack官网](http://webpack.github.io/docs/)\n\n还有关于webpack的常用的命令行有：\n```javascript\n $ webpack //用来一次性执行开发环境webpack\n $ webpack -p //用来一次性执行生产环境webpack\n $ webpack --watch //用来持续的执行webpack\n $ webpack -d //包含source maps文件\n $ webpack --colors //用来让wenbpack执行后的文件更优美\n```\n\n## 目录结构\n```javascript\n--- dist (webpac打包后的文件)\n    |--- ...\n--- images (图片文件)\n    |--- ...\n--- src (webpack打包前源文件)\n    |--- js (源文件组件文件夹)\n    |    |--- client.js (javascript文件)\n    |    |--- image.js (image文件)\n    |    |--- style.js (css文件)\n    | \t |...\n    |--- sass (sass文件夹)          \n    |    |--- app.scss (sass文件)\n    |    |---\n    |--- index.html (主页面)\n    |--- package.json (配置文件)\n    |--- webpack.config.js (webpack配置文件) \n```\n\n## 参考文章\n关于webpack.config.js的文件配置参考了\n - 阮大神的[webpack-demos](https://github.com/ruanyf/webpack-demos)\n - Petehunt大神的[webpack-howto](https://github.com/petehunt/webpack-howto)\n - [Webpack documents](https://webpack.github.io/docs/)\n - 鄙人的[blog](http://blog.gaoquan.wang)，会长期更新","slug":"webapck配置指导","published":1,"updated":"2016-03-22T12:54:31.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimovo3xq0006skgjqnfssej5","content":"<blockquote>\n<p>True mastery of any skill takes a lifetime.</p>\n</blockquote>\n<p>写在前面的话，花了一天一夜学得的webpack，并且都把webapck.config.js配置完成了，leader不让用，还说不要盲目跟风。无语，遂把学得的东西贡献出来。</p>\n<h2 id=\"Getting-started\"><a href=\"#Getting-started\" class=\"headerlink\" title=\"Getting started\"></a>Getting started</h2><p>首先，全局下载<a href=\"https://www.npmjs.com/package/webpack\" target=\"_blank\" rel=\"external\">webpack</a>和<a href=\"https://www.npmjs.com/package/live-server\" target=\"_blank\" rel=\"external\">live-server</a>。<br><strong><em>ps</em></strong>：这边可自行选择，<a href=\"https://www.npmjs.com/package/live-server\" target=\"_blank\" rel=\"external\">live-server</a>或是<a href=\"https://www.npmjs.com/package/webpack-dev-server\" target=\"_blank\" rel=\"external\">webpack-dev-server</a>，我用的是live-server。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g webpack live-server</span><br></pre></td></tr></table></figure>\n<p>然后，git直接clone本仓库以及依赖包</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/GaoQ1/webpack-start.git</span></span><br><span class=\"line\">$ cd webpack-scaffold</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>现在你可以试试webpack的效果了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ webpack</span><br><span class=\"line\">$ live-server</span><br></pre></td></tr></table></figure>\n<p>浏览器会自动打开，然后点击src，访问路径为<a href=\"http://127.0.0.1:8080/src/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8080/src/</a>。 </p>\n<h2 id=\"什么是webpack\"><a href=\"#什么是webpack\" class=\"headerlink\" title=\"什么是webpack\"></a>什么是webpack</h2><p>至于什么是webpack，网上有很多资料，我就不copy过来了，详细的可参考</p>\n<ul>\n<li><a href=\"http://zhaoda.net/webpack-handbook/\" target=\"_blank\" rel=\"external\">Webpack中文指南</a></li>\n<li><a href=\"http://webpack.github.io/docs/\" target=\"_blank\" rel=\"external\">Webpack官网</a></li>\n</ul>\n<p>还有关于webpack的常用的命令行有：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ webpack <span class=\"comment\">//用来一次性执行开发环境webpack</span></span><br><span class=\"line\">$ webpack -p <span class=\"comment\">//用来一次性执行生产环境webpack</span></span><br><span class=\"line\">$ webpack --watch <span class=\"comment\">//用来持续的执行webpack</span></span><br><span class=\"line\">$ webpack -d <span class=\"comment\">//包含source maps文件</span></span><br><span class=\"line\">$ webpack --colors <span class=\"comment\">//用来让wenbpack执行后的文件更优美</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--- dist (webpac打包后的文件)</span><br><span class=\"line\">    |--- ...</span><br><span class=\"line\">--- images (图片文件)</span><br><span class=\"line\">    |--- ...</span><br><span class=\"line\">--- src (webpack打包前源文件)</span><br><span class=\"line\">    |--- js (源文件组件文件夹)</span><br><span class=\"line\">    |    |--- client.js (javascript文件)</span><br><span class=\"line\">    |    |--- image.js (image文件)</span><br><span class=\"line\">    |    |--- style.js (css文件)</span><br><span class=\"line\">    | \t |...</span><br><span class=\"line\">    |--- sass (sass文件夹)          </span><br><span class=\"line\">    |    |--- app.scss (sass文件)</span><br><span class=\"line\">    |    |---</span><br><span class=\"line\">    |--- index.html (主页面)</span><br><span class=\"line\">    |--- package.json (配置文件)</span><br><span class=\"line\">    |--- webpack.config.js (webpack配置文件)</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p>关于webpack.config.js的文件配置参考了</p>\n<ul>\n<li>阮大神的<a href=\"https://github.com/ruanyf/webpack-demos\" target=\"_blank\" rel=\"external\">webpack-demos</a></li>\n<li>Petehunt大神的<a href=\"https://github.com/petehunt/webpack-howto\" target=\"_blank\" rel=\"external\">webpack-howto</a></li>\n<li><a href=\"https://webpack.github.io/docs/\" target=\"_blank\" rel=\"external\">Webpack documents</a></li>\n<li>鄙人的<a href=\"http://blog.gaoquan.wang\" target=\"_blank\" rel=\"external\">blog</a>，会长期更新</li>\n</ul>\n","excerpt":"","more":"<blockquote>\n<p>True mastery of any skill takes a lifetime.</p>\n</blockquote>\n<p>写在前面的话，花了一天一夜学得的webpack，并且都把webapck.config.js配置完成了，leader不让用，还说不要盲目跟风。无语，遂把学得的东西贡献出来。</p>\n<h2 id=\"Getting-started\"><a href=\"#Getting-started\" class=\"headerlink\" title=\"Getting started\"></a>Getting started</h2><p>首先，全局下载<a href=\"https://www.npmjs.com/package/webpack\">webpack</a>和<a href=\"https://www.npmjs.com/package/live-server\">live-server</a>。<br><strong><em>ps</em></strong>：这边可自行选择，<a href=\"https://www.npmjs.com/package/live-server\">live-server</a>或是<a href=\"https://www.npmjs.com/package/webpack-dev-server\">webpack-dev-server</a>，我用的是live-server。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g webpack live-server</span><br></pre></td></tr></table></figure>\n<p>然后，git直接clone本仓库以及依赖包</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/GaoQ1/webpack-start.git</span></span><br><span class=\"line\">$ cd webpack-scaffold</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>现在你可以试试webpack的效果了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ webpack</span><br><span class=\"line\">$ live-server</span><br></pre></td></tr></table></figure>\n<p>浏览器会自动打开，然后点击src，访问路径为<a href=\"http://127.0.0.1:8080/src/\">http://127.0.0.1:8080/src/</a>。 </p>\n<h2 id=\"什么是webpack\"><a href=\"#什么是webpack\" class=\"headerlink\" title=\"什么是webpack\"></a>什么是webpack</h2><p>至于什么是webpack，网上有很多资料，我就不copy过来了，详细的可参考</p>\n<ul>\n<li><a href=\"http://zhaoda.net/webpack-handbook/\">Webpack中文指南</a></li>\n<li><a href=\"http://webpack.github.io/docs/\">Webpack官网</a></li>\n</ul>\n<p>还有关于webpack的常用的命令行有：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ webpack <span class=\"comment\">//用来一次性执行开发环境webpack</span></span><br><span class=\"line\">$ webpack -p <span class=\"comment\">//用来一次性执行生产环境webpack</span></span><br><span class=\"line\">$ webpack --watch <span class=\"comment\">//用来持续的执行webpack</span></span><br><span class=\"line\">$ webpack -d <span class=\"comment\">//包含source maps文件</span></span><br><span class=\"line\">$ webpack --colors <span class=\"comment\">//用来让wenbpack执行后的文件更优美</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--- dist (webpac打包后的文件)</span><br><span class=\"line\">    |--- ...</span><br><span class=\"line\">--- images (图片文件)</span><br><span class=\"line\">    |--- ...</span><br><span class=\"line\">--- src (webpack打包前源文件)</span><br><span class=\"line\">    |--- js (源文件组件文件夹)</span><br><span class=\"line\">    |    |--- client.js (javascript文件)</span><br><span class=\"line\">    |    |--- image.js (image文件)</span><br><span class=\"line\">    |    |--- style.js (css文件)</span><br><span class=\"line\">    | \t |...</span><br><span class=\"line\">    |--- sass (sass文件夹)          </span><br><span class=\"line\">    |    |--- app.scss (sass文件)</span><br><span class=\"line\">    |    |---</span><br><span class=\"line\">    |--- index.html (主页面)</span><br><span class=\"line\">    |--- package.json (配置文件)</span><br><span class=\"line\">    |--- webpack.config.js (webpack配置文件)</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p>关于webpack.config.js的文件配置参考了</p>\n<ul>\n<li>阮大神的<a href=\"https://github.com/ruanyf/webpack-demos\">webpack-demos</a></li>\n<li>Petehunt大神的<a href=\"https://github.com/petehunt/webpack-howto\">webpack-howto</a></li>\n<li><a href=\"https://webpack.github.io/docs/\">Webpack documents</a></li>\n<li>鄙人的<a href=\"http://blog.gaoquan.wang\">blog</a>，会长期更新</li>\n</ul>\n"},{"title":"使用Flexible实现H5页面终端适配","date":"2016-03-24T05:50:47.000Z","_content":">The less you reveal the more people can wonder.\n\n一次偶然的机会在某技术群里听到手淘flexible.js能够解决移动端适配的问题，遂实践了一下。想来用这套方案也有一段时间了，今天就将自己的理解和实践做个总结。\n\n## 页面效果\n\n首先放一张设计完成的页面效果图：\n\n![页面效果图](/images/flexible/flexible01.png)\n\n就是这样一个简单的H5页面，虽然H5页面相对于PC端Web页面简单了很多，但是难点在于让页面适配众多不同的终端设备。而终端设备有哪些，详细参考[Device metrics](https://design.google.com/devices/)，看完之后会感觉很恶心，但仍想完美的解决，这时牛X的手淘团队总结了一套[Flexible解决方案](https://github.com/amfe/lib-flexible)\n\n## 手淘的方案\n\n#### 1. 直接上图看看手淘的适配协作模式：\n\n![手淘方案](/images/flexible/flexible02.png)\n\n对这张图我的理解让UI在750px设计并标注大小和坐标，再矢量放大1.5倍后切图，于是我得到了所谓的@3x切图\n\n![@3x切图](/images/flexible/flexible03.png)\n\n#### 2. 引入flexible.js\n\n[lib-flexible库](https://github.com/amfe/lib-flexible)使用方法非常简单，只需要在head头标签中添加对应的flexible_css.js,flexible.js文件。\n\n第一种方法是将文件下载到你的项目中，然后引入添加：\n\n```javascript\n<script src=\"./js/lib/flexible_css.debug.js\"></script>\n<script src=\"./js/lib/flexible.debug.js\"></script>\n```\n\n或者直接加载阿里CDN的文件：\n\n```javascript\n<script src=\"http://g.tbcdn.cn/mtb/lib-flexible/{{version}}/??flexible_css.js,flexible.js\"></script>\n```\n\n将代码中的***{{version}}***换成对应的版本号0.3.4.\n![flexible.js引入](/images/flexible/flexible04.png)\n\n注意使用lib-flexible，通常不要写：\n```javascript\n<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"/>\n```\n交给flexible.js自己处理。\n\n我们来看看效果，在chrome中选择iphone6可以看到font-size:75px：\n![iphone6](/images/flexible/flexible05.png)\n\n#### 3. 把视觉搞中的px转换成rem\n\n什么是rem？\n>font size of the root element.\n\n当html中font-size能够动态给出，这样使用rem就十分简单了。而如何将750px下的标注搞转换成rem。这里简单的介绍下Flexible的做法。\n\n目前Flexible会将视觉稿分成100份（主要为了以后能更好的兼容vh和vw），而每一份被称为一个单位a。同时1rem单位被认定为10a。针对我们这份视觉稿可以计算出：\n\n```\n1a   = 7.5px\n1rem = 75px \n```\n\n所以显而易见，只要将750px下的标注搞/75就是对应的rem的值，比如视觉稿中的图片大小为200px*200px，转换成为2.667rem*2.667rem。\n\n## 如何快速计算CSS\n\n关于这方面的工具有很多，手淘同学编写了各种工具，这里我使用的[PostCSS(px2rem)](https://www.npmjs.com/package/px2rem)，非常好用，在此谢过。gulpfile.js文件的编写如下：\n\n![gulpfile.js](/images/flexible/flexible06.png)\n\n配置完成后实际用的时候只要这样使用：\n\n![rem1.js](/images/flexible/flexible07.png)\n\npx2rem处理之后将会变成：\n\n![rem2.js](/images/flexible/flexible08.png)\n\n另外如果你是使用Sass或是Less，你也可以使用Sass函数、混合宏来实现：\n\n```javascript\n@function px2em($px, $base-font-size: 16px) {\n    @if (unitless($px)) {\n        @warn \"#{$px} 参数应该为像素\";\n        @return px2em($px + 0px);\n    } @else if (unit($px) == em) {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n```\n\n***需要注意的是字号不使用rem，还是用px***\n\n## 效果\n\n最后，直接看下效果吧。\nMobile S\n![Mobile S](/images/flexible/flexible09.png)\n\nMobile L\n![Mobile L](/images/flexible/flexible10.png)\n\n## 总结\n\n竟然写了这么长，这篇一来是对自己使用flexible的总结和感悟，总之用了之后很方便。其次也是最近有朋友问我是如何解决移动端适配，我直接说了flexible并扔了几个资料，把自己如何用的写出来估计会更好。有什么意见欢迎提出。","source":"_posts/使用Flexible实现H5页面终端适配.md","raw":"---\ntitle: 使用Flexible实现H5页面终端适配\ndate: 2016-03-24 13:50:47\ntags:\n- flexible\n- 终端适配\ncategories: 教程\n---\n>The less you reveal the more people can wonder.\n\n一次偶然的机会在某技术群里听到手淘flexible.js能够解决移动端适配的问题，遂实践了一下。想来用这套方案也有一段时间了，今天就将自己的理解和实践做个总结。\n\n## 页面效果\n\n首先放一张设计完成的页面效果图：\n\n![页面效果图](/images/flexible/flexible01.png)\n\n就是这样一个简单的H5页面，虽然H5页面相对于PC端Web页面简单了很多，但是难点在于让页面适配众多不同的终端设备。而终端设备有哪些，详细参考[Device metrics](https://design.google.com/devices/)，看完之后会感觉很恶心，但仍想完美的解决，这时牛X的手淘团队总结了一套[Flexible解决方案](https://github.com/amfe/lib-flexible)\n\n## 手淘的方案\n\n#### 1. 直接上图看看手淘的适配协作模式：\n\n![手淘方案](/images/flexible/flexible02.png)\n\n对这张图我的理解让UI在750px设计并标注大小和坐标，再矢量放大1.5倍后切图，于是我得到了所谓的@3x切图\n\n![@3x切图](/images/flexible/flexible03.png)\n\n#### 2. 引入flexible.js\n\n[lib-flexible库](https://github.com/amfe/lib-flexible)使用方法非常简单，只需要在head头标签中添加对应的flexible_css.js,flexible.js文件。\n\n第一种方法是将文件下载到你的项目中，然后引入添加：\n\n```javascript\n<script src=\"./js/lib/flexible_css.debug.js\"></script>\n<script src=\"./js/lib/flexible.debug.js\"></script>\n```\n\n或者直接加载阿里CDN的文件：\n\n```javascript\n<script src=\"http://g.tbcdn.cn/mtb/lib-flexible/{{version}}/??flexible_css.js,flexible.js\"></script>\n```\n\n将代码中的***{{version}}***换成对应的版本号0.3.4.\n![flexible.js引入](/images/flexible/flexible04.png)\n\n注意使用lib-flexible，通常不要写：\n```javascript\n<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"/>\n```\n交给flexible.js自己处理。\n\n我们来看看效果，在chrome中选择iphone6可以看到font-size:75px：\n![iphone6](/images/flexible/flexible05.png)\n\n#### 3. 把视觉搞中的px转换成rem\n\n什么是rem？\n>font size of the root element.\n\n当html中font-size能够动态给出，这样使用rem就十分简单了。而如何将750px下的标注搞转换成rem。这里简单的介绍下Flexible的做法。\n\n目前Flexible会将视觉稿分成100份（主要为了以后能更好的兼容vh和vw），而每一份被称为一个单位a。同时1rem单位被认定为10a。针对我们这份视觉稿可以计算出：\n\n```\n1a   = 7.5px\n1rem = 75px \n```\n\n所以显而易见，只要将750px下的标注搞/75就是对应的rem的值，比如视觉稿中的图片大小为200px*200px，转换成为2.667rem*2.667rem。\n\n## 如何快速计算CSS\n\n关于这方面的工具有很多，手淘同学编写了各种工具，这里我使用的[PostCSS(px2rem)](https://www.npmjs.com/package/px2rem)，非常好用，在此谢过。gulpfile.js文件的编写如下：\n\n![gulpfile.js](/images/flexible/flexible06.png)\n\n配置完成后实际用的时候只要这样使用：\n\n![rem1.js](/images/flexible/flexible07.png)\n\npx2rem处理之后将会变成：\n\n![rem2.js](/images/flexible/flexible08.png)\n\n另外如果你是使用Sass或是Less，你也可以使用Sass函数、混合宏来实现：\n\n```javascript\n@function px2em($px, $base-font-size: 16px) {\n    @if (unitless($px)) {\n        @warn \"#{$px} 参数应该为像素\";\n        @return px2em($px + 0px);\n    } @else if (unit($px) == em) {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n```\n\n***需要注意的是字号不使用rem，还是用px***\n\n## 效果\n\n最后，直接看下效果吧。\nMobile S\n![Mobile S](/images/flexible/flexible09.png)\n\nMobile L\n![Mobile L](/images/flexible/flexible10.png)\n\n## 总结\n\n竟然写了这么长，这篇一来是对自己使用flexible的总结和感悟，总之用了之后很方便。其次也是最近有朋友问我是如何解决移动端适配，我直接说了flexible并扔了几个资料，把自己如何用的写出来估计会更好。有什么意见欢迎提出。","slug":"使用Flexible实现H5页面终端适配","published":1,"updated":"2016-03-24T12:31:30.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cimovo3xu0008skgj69ext6s3","content":"<blockquote>\n<p>The less you reveal the more people can wonder.</p>\n</blockquote>\n<p>一次偶然的机会在某技术群里听到手淘flexible.js能够解决移动端适配的问题，遂实践了一下。想来用这套方案也有一段时间了，今天就将自己的理解和实践做个总结。</p>\n<h2 id=\"页面效果\"><a href=\"#页面效果\" class=\"headerlink\" title=\"页面效果\"></a>页面效果</h2><p>首先放一张设计完成的页面效果图：</p>\n<p><img src=\"/images/flexible/flexible01.png\" alt=\"页面效果图\"></p>\n<p>就是这样一个简单的H5页面，虽然H5页面相对于PC端Web页面简单了很多，但是难点在于让页面适配众多不同的终端设备。而终端设备有哪些，详细参考<a href=\"https://design.google.com/devices/\" target=\"_blank\" rel=\"external\">Device metrics</a>，看完之后会感觉很恶心，但仍想完美的解决，这时牛X的手淘团队总结了一套<a href=\"https://github.com/amfe/lib-flexible\" target=\"_blank\" rel=\"external\">Flexible解决方案</a></p>\n<h2 id=\"手淘的方案\"><a href=\"#手淘的方案\" class=\"headerlink\" title=\"手淘的方案\"></a>手淘的方案</h2><h4 id=\"1-直接上图看看手淘的适配协作模式：\"><a href=\"#1-直接上图看看手淘的适配协作模式：\" class=\"headerlink\" title=\"1. 直接上图看看手淘的适配协作模式：\"></a>1. 直接上图看看手淘的适配协作模式：</h4><p><img src=\"/images/flexible/flexible02.png\" alt=\"手淘方案\"></p>\n<p>对这张图我的理解让UI在750px设计并标注大小和坐标，再矢量放大1.5倍后切图，于是我得到了所谓的@3x切图</p>\n<p><img src=\"/images/flexible/flexible03.png\" alt=\"@3x切图\"></p>\n<h4 id=\"2-引入flexible-js\"><a href=\"#2-引入flexible-js\" class=\"headerlink\" title=\"2. 引入flexible.js\"></a>2. 引入flexible.js</h4><p><a href=\"https://github.com/amfe/lib-flexible\" target=\"_blank\" rel=\"external\">lib-flexible库</a>使用方法非常简单，只需要在head头标签中添加对应的flexible_css.js,flexible.js文件。</p>\n<p>第一种方法是将文件下载到你的项目中，然后引入添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/lib/flexible_css.debug.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/lib/flexible.debug.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>或者直接加载阿里CDN的文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"http://g.tbcdn.cn/mtb/lib-flexible/&#123;&#123;version&#125;&#125;/??flexible_css.js,flexible.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>将代码中的<strong><em></em></strong>换成对应的版本号0.3.4.<br><img src=\"/images/flexible/flexible04.png\" alt=\"flexible.js引入\"></p>\n<p>注意使用lib-flexible，通常不要写：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>/&gt;</span><br></pre></td></tr></table></figure></p>\n<p>交给flexible.js自己处理。</p>\n<p>我们来看看效果，在chrome中选择iphone6可以看到font-size:75px：<br><img src=\"/images/flexible/flexible05.png\" alt=\"iphone6\"></p>\n<h4 id=\"3-把视觉搞中的px转换成rem\"><a href=\"#3-把视觉搞中的px转换成rem\" class=\"headerlink\" title=\"3. 把视觉搞中的px转换成rem\"></a>3. 把视觉搞中的px转换成rem</h4><p>什么是rem？</p>\n<blockquote>\n<p>font size of the root element.</p>\n</blockquote>\n<p>当html中font-size能够动态给出，这样使用rem就十分简单了。而如何将750px下的标注搞转换成rem。这里简单的介绍下Flexible的做法。</p>\n<p>目前Flexible会将视觉稿分成100份（主要为了以后能更好的兼容vh和vw），而每一份被称为一个单位a。同时1rem单位被认定为10a。针对我们这份视觉稿可以计算出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1a   = 7.5px</span><br><span class=\"line\">1rem = 75px</span><br></pre></td></tr></table></figure>\n<p>所以显而易见，只要将750px下的标注搞/75就是对应的rem的值，比如视觉稿中的图片大小为200px<em>200px，转换成为2.667rem</em>2.667rem。</p>\n<h2 id=\"如何快速计算CSS\"><a href=\"#如何快速计算CSS\" class=\"headerlink\" title=\"如何快速计算CSS\"></a>如何快速计算CSS</h2><p>关于这方面的工具有很多，手淘同学编写了各种工具，这里我使用的<a href=\"https://www.npmjs.com/package/px2rem\" target=\"_blank\" rel=\"external\">PostCSS(px2rem)</a>，非常好用，在此谢过。gulpfile.js文件的编写如下：</p>\n<p><img src=\"/images/flexible/flexible06.png\" alt=\"gulpfile.js\"></p>\n<p>配置完成后实际用的时候只要这样使用：</p>\n<p><img src=\"/images/flexible/flexible07.png\" alt=\"rem1.js\"></p>\n<p>px2rem处理之后将会变成：</p>\n<p><img src=\"/images/flexible/flexible08.png\" alt=\"rem2.js\"></p>\n<p>另外如果你是使用Sass或是Less，你也可以使用Sass函数、混合宏来实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">px2em</span>(<span class=\"params\">$px, $base-font-size: 16px</span>) </span>&#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> (unitless($px)) &#123;</span><br><span class=\"line\">        @warn <span class=\"string\">\"#&#123;$px&#125; 参数应该为像素\"</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">return</span> px2em($px + <span class=\"number\">0</span>px);</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (unit($px) == em) &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">return</span> $px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">return</span> ($px / $base-font-size) * <span class=\"number\">1</span>em;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><em>需要注意的是字号不使用rem，还是用px</em></strong></p>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>最后，直接看下效果吧。<br>Mobile S<br><img src=\"/images/flexible/flexible09.png\" alt=\"Mobile S\"></p>\n<p>Mobile L<br><img src=\"/images/flexible/flexible10.png\" alt=\"Mobile L\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>竟然写了这么长，这篇一来是对自己使用flexible的总结和感悟，总之用了之后很方便。其次也是最近有朋友问我是如何解决移动端适配，我直接说了flexible并扔了几个资料，把自己如何用的写出来估计会更好。有什么意见欢迎提出。</p>\n","excerpt":"","more":"<blockquote>\n<p>The less you reveal the more people can wonder.</p>\n</blockquote>\n<p>一次偶然的机会在某技术群里听到手淘flexible.js能够解决移动端适配的问题，遂实践了一下。想来用这套方案也有一段时间了，今天就将自己的理解和实践做个总结。</p>\n<h2 id=\"页面效果\"><a href=\"#页面效果\" class=\"headerlink\" title=\"页面效果\"></a>页面效果</h2><p>首先放一张设计完成的页面效果图：</p>\n<p><img src=\"/images/flexible/flexible01.png\" alt=\"页面效果图\"></p>\n<p>就是这样一个简单的H5页面，虽然H5页面相对于PC端Web页面简单了很多，但是难点在于让页面适配众多不同的终端设备。而终端设备有哪些，详细参考<a href=\"https://design.google.com/devices/\">Device metrics</a>，看完之后会感觉很恶心，但仍想完美的解决，这时牛X的手淘团队总结了一套<a href=\"https://github.com/amfe/lib-flexible\">Flexible解决方案</a></p>\n<h2 id=\"手淘的方案\"><a href=\"#手淘的方案\" class=\"headerlink\" title=\"手淘的方案\"></a>手淘的方案</h2><h4 id=\"1-直接上图看看手淘的适配协作模式：\"><a href=\"#1-直接上图看看手淘的适配协作模式：\" class=\"headerlink\" title=\"1. 直接上图看看手淘的适配协作模式：\"></a>1. 直接上图看看手淘的适配协作模式：</h4><p><img src=\"/images/flexible/flexible02.png\" alt=\"手淘方案\"></p>\n<p>对这张图我的理解让UI在750px设计并标注大小和坐标，再矢量放大1.5倍后切图，于是我得到了所谓的@3x切图</p>\n<p><img src=\"/images/flexible/flexible03.png\" alt=\"@3x切图\"></p>\n<h4 id=\"2-引入flexible-js\"><a href=\"#2-引入flexible-js\" class=\"headerlink\" title=\"2. 引入flexible.js\"></a>2. 引入flexible.js</h4><p><a href=\"https://github.com/amfe/lib-flexible\">lib-flexible库</a>使用方法非常简单，只需要在head头标签中添加对应的flexible_css.js,flexible.js文件。</p>\n<p>第一种方法是将文件下载到你的项目中，然后引入添加：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/lib/flexible_css.debug.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"./js/lib/flexible.debug.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>或者直接加载阿里CDN的文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"http://g.tbcdn.cn/mtb/lib-flexible/&#123;&#123;version&#125;&#125;/??flexible_css.js,flexible.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>将代码中的<strong><em></em></strong>换成对应的版本号0.3.4.<br><img src=\"/images/flexible/flexible04.png\" alt=\"flexible.js引入\"></p>\n<p>注意使用lib-flexible，通常不要写：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\"</span>/&gt;</span><br></pre></td></tr></table></figure></p>\n<p>交给flexible.js自己处理。</p>\n<p>我们来看看效果，在chrome中选择iphone6可以看到font-size:75px：<br><img src=\"/images/flexible/flexible05.png\" alt=\"iphone6\"></p>\n<h4 id=\"3-把视觉搞中的px转换成rem\"><a href=\"#3-把视觉搞中的px转换成rem\" class=\"headerlink\" title=\"3. 把视觉搞中的px转换成rem\"></a>3. 把视觉搞中的px转换成rem</h4><p>什么是rem？</p>\n<blockquote>\n<p>font size of the root element.</p>\n</blockquote>\n<p>当html中font-size能够动态给出，这样使用rem就十分简单了。而如何将750px下的标注搞转换成rem。这里简单的介绍下Flexible的做法。</p>\n<p>目前Flexible会将视觉稿分成100份（主要为了以后能更好的兼容vh和vw），而每一份被称为一个单位a。同时1rem单位被认定为10a。针对我们这份视觉稿可以计算出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1a   = 7.5px</span><br><span class=\"line\">1rem = 75px</span><br></pre></td></tr></table></figure>\n<p>所以显而易见，只要将750px下的标注搞/75就是对应的rem的值，比如视觉稿中的图片大小为200px<em>200px，转换成为2.667rem</em>2.667rem。</p>\n<h2 id=\"如何快速计算CSS\"><a href=\"#如何快速计算CSS\" class=\"headerlink\" title=\"如何快速计算CSS\"></a>如何快速计算CSS</h2><p>关于这方面的工具有很多，手淘同学编写了各种工具，这里我使用的<a href=\"https://www.npmjs.com/package/px2rem\">PostCSS(px2rem)</a>，非常好用，在此谢过。gulpfile.js文件的编写如下：</p>\n<p><img src=\"/images/flexible/flexible06.png\" alt=\"gulpfile.js\"></p>\n<p>配置完成后实际用的时候只要这样使用：</p>\n<p><img src=\"/images/flexible/flexible07.png\" alt=\"rem1.js\"></p>\n<p>px2rem处理之后将会变成：</p>\n<p><img src=\"/images/flexible/flexible08.png\" alt=\"rem2.js\"></p>\n<p>另外如果你是使用Sass或是Less，你也可以使用Sass函数、混合宏来实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">px2em</span>(<span class=\"params\">$px, $base-font-size: 16px</span>) </span>&#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> (unitless($px)) &#123;</span><br><span class=\"line\">        @warn <span class=\"string\">\"#&#123;$px&#125; 参数应该为像素\"</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">return</span> px2em($px + <span class=\"number\">0</span>px);</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (unit($px) == em) &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">return</span> $px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">return</span> ($px / $base-font-size) * <span class=\"number\">1</span>em;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><em>需要注意的是字号不使用rem，还是用px</em></strong></p>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>最后，直接看下效果吧。<br>Mobile S<br><img src=\"/images/flexible/flexible09.png\" alt=\"Mobile S\"></p>\n<p>Mobile L<br><img src=\"/images/flexible/flexible10.png\" alt=\"Mobile L\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>竟然写了这么长，这篇一来是对自己使用flexible的总结和感悟，总之用了之后很方便。其次也是最近有朋友问我是如何解决移动端适配，我直接说了flexible并扔了几个资料，把自己如何用的写出来估计会更好。有什么意见欢迎提出。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cimovo3xq0006skgjqnfssej5","category_id":"cimovo3xn0004skgjda7zweo3","_id":"cimovo3y2000askgjng8y3i5n"},{"post_id":"cimovo3x50000skgjhopoyh5u","category_id":"cimovo3xn0004skgjda7zweo3","_id":"cimovo3y5000dskgjff3jjc16"},{"post_id":"cimovo3xu0008skgj69ext6s3","category_id":"cimovo3xn0004skgjda7zweo3","_id":"cimovo3y7000fskgjh5con1b0"},{"post_id":"cimovo3xh0002skgj08geknm3","category_id":"cimovo3xn0004skgjda7zweo3","_id":"cimovo3y9000iskgjuwyiepw6"},{"post_id":"cimovo3xo0005skgjucmwydqs","category_id":"cimovo3y4000bskgj56l1quqd","_id":"cimovo3ya000jskgjyvamncpm"}],"PostTag":[{"post_id":"cimovo3x50000skgjhopoyh5u","tag_id":"cimovo3xl0003skgjwufu608h","_id":"cimovo3y6000eskgj3ku3943r"},{"post_id":"cimovo3x50000skgjhopoyh5u","tag_id":"cimovo3xt0007skgjmhy553o8","_id":"cimovo3y7000gskgje6xo2lis"},{"post_id":"cimovo3xh0002skgj08geknm3","tag_id":"cimovo3y4000cskgj30eo464j","_id":"cimovo3yc000lskgjhvcn6qx7"},{"post_id":"cimovo3xh0002skgj08geknm3","tag_id":"cimovo3y9000hskgj4qx1kld1","_id":"cimovo3yd000mskgjnssvq4tm"},{"post_id":"cimovo3xo0005skgjucmwydqs","tag_id":"cimovo3yb000kskgj9ry3f0vj","_id":"cimovo3yi000pskgj0syaxf5o"},{"post_id":"cimovo3xo0005skgjucmwydqs","tag_id":"cimovo3ye000nskgjtnwcqj79","_id":"cimovo3yj000qskgjc4c6ewok"},{"post_id":"cimovo3xq0006skgjqnfssej5","tag_id":"cimovo3y4000cskgj30eo464j","_id":"cimovo3yl000tskgjk7lklams"},{"post_id":"cimovo3xq0006skgjqnfssej5","tag_id":"cimovo3yj000rskgj6twiwm02","_id":"cimovo3yl000uskgjkpduu0kc"},{"post_id":"cimovo3xu0008skgj69ext6s3","tag_id":"cimovo3yk000sskgjl4bvwon4","_id":"cimovo3yp000wskgj72gvx28x"},{"post_id":"cimovo3xu0008skgj69ext6s3","tag_id":"cimovo3ym000vskgjrpm605wl","_id":"cimovo3yw000xskgjqf0yurlg"}],"Tag":[{"name":"animation","_id":"cimovo3xl0003skgjwufu608h"},{"name":"css3","_id":"cimovo3xt0007skgjmhy553o8"},{"name":"webpack","_id":"cimovo3y4000cskgj30eo464j"},{"name":"模块系统","_id":"cimovo3y9000hskgj4qx1kld1"},{"name":"zepto","_id":"cimovo3yb000kskgj9ry3f0vj"},{"name":"学习笔记","_id":"cimovo3ye000nskgjtnwcqj79"},{"name":"快速上手","_id":"cimovo3yj000rskgj6twiwm02"},{"name":"flexible","_id":"cimovo3yk000sskgjl4bvwon4"},{"name":"终端适配","_id":"cimovo3ym000vskgjrpm605wl"}]}}